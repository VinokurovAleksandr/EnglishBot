from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from bot.states import Survey
from bot import keyboards as kb
from bot.google_sheets import save_to_sheet

router = Router()



@router.message(Command("start"))
async def cmd_start(msg: Message, state: FSMContext):
    await msg.answer(
        "üìö *–í—ñ—Ç–∞—î–º–æ —É –±–æ—Ç—ñ-–æ–ø–∏—Ç—É–≤–∞–ª—å–Ω–∏–∫—É –∑ –≤–∏–≤—á–µ–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó!* üá¨üáß\n\n"
        "Be ready,–±–æ –≤–æ–Ω–æ –∑–∞–π–º–µ —Ç—Ä–æ—Ö–∏ —Ç–≤–æ–≥–æ —á–∞—Å—É-be patient \n\n"
        "–¢—É—Ç —Ç–∏ –ø—Ä–æ–π–¥–µ—à –∫–æ—Ä–æ—Ç–∫–µ, –∞–ª–µ useful –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è —Ç–µ–±–µ —ñ —Ç–≤–æ–≥–æ –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–ª–∞–¥–∞—á–∞ üß†\n"
        "–ú–∏ –¥—ñ–∑–Ω–∞—î–º–æ—Å—è –±—ñ–ª—å—à–µ –ø—Ä–æ —Ç–≤–æ—ó —Ü—ñ–ª—ñ, —Ç—Ä—É–¥–Ω–æ—â—ñ —Ç–∞ –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è —É –Ω–∞–≤—á–∞–Ω–Ω—ñ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏.\n\n"
        "üéØ –ù–∞ –æ—Å–Ω–æ–≤—ñ —Ç–≤–æ—ó—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –º–∏ –∑–º–æ–∂–µ–º–æ –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ –¥–ª—è —Ç–µ–±–µ –∫–∞—Å—Ç–æ–º—ñ–∑–æ–≤–∞–Ω—É –ø—Ä–æ–≥—Ä–∞–º—É –Ω–∞–≤—á–∞–Ω–Ω—è!\n\n"
        "üëá –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏!",
        reply_markup=kb.start_kb,
        parse_mode="Markdown"
    )

from bot import b1_flow
router.include_router(b1_flow.router)

from bot import b2_flow  # —ñ–º–ø–æ—Ä—Ç—É—î–º–æ FSM-–≥—ñ–ª–∫—É B2
router.include_router(b2_flow.router)  # –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ router



def register_handlers(dp):
    dp.include_router(router)

@router.message(F.text == "üöÄ –ü–æ—á–∞—Ç–∏ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è")
async def start_survey(msg: Message, state: FSMContext):
    await msg.answer("üìå –¢–≤–æ—î —Ç–≤–æ—î —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ?", reply_markup=ReplyKeyboardRemove())
    await state.set_state(Survey.name)

@router.message(Survey.name)
async def ask_motivation(msg: Message, state: FSMContext):
    await state.update_data(name=msg.text)
    await msg.answer("ü§î –ß–æ–º—É —Ç–∏ —Ö–æ—á–µ—à  –≤–∏–≤—á–∞—Ç–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É —Å–∞–º–µ –∑–∞—Ä–∞–∑?")
    await state.set_state(Survey.motivation)

@router.message(Survey.motivation)
async def ask_obstacle(msg: Message, state: FSMContext):
    await state.update_data(motivation=msg.text)
    await msg.answer("üöß –©–æ –¥–ª—è —Ç–≤–æ—é –¥—É–º–∫—É —î –Ω–∞–π–±—ñ–ª—å—à–æ—é –ø–µ—Ä–µ—à–∫–æ–¥–æ—é —É –≤–∏–≤—á–µ–Ω–Ω—ñ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó?")
    await state.set_state(Survey.obstacle)

@router.message(Survey.obstacle)
async def ask_goal(msg: Message, state: FSMContext):
    await state.update_data(obstacle=msg.text)
    await msg.answer("üéØ –Ø–∫ —Ç–∏ –ø–ª–∞–Ω—É—î—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–≤–æ—ó –∑–Ω–∞–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏ –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É?")
    await state.set_state(Survey.goal)

@router.message(Survey.goal)
async def ask_interest(msg: Message, state: FSMContext):
    await state.update_data(goal=msg.text)
    await msg.answer("üí° –Ø–∫—ñ –∞—Å–ø–µ–∫—Ç–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–ª—è—Ç—å –Ω–∞–π–±—ñ–ª—å—à–µ?", reply_markup=kb.interest_kb)
    await state.set_state(Survey.interest)

@router.message(Survey.interest)
async def ask_format(msg: Message, state: FSMContext):
    await state.update_data(interest=msg.text)
    await msg.answer("üìò –Ø–∫–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞–≤—á–∞–Ω–Ω—è –¥–ª—è —Ç–µ–±–µ –±—ñ–ª—å—à–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å?", reply_markup=kb.format_kb)
    await state.set_state(Survey.format)

@router.message(Survey.format)
async def ask_pace(msg: Message, state: FSMContext):
    await state.update_data(format=msg.text)
    await msg.answer("‚è±Ô∏è –Ø–∫–∏–π —Ç–µ–º–ø –Ω–∞–≤—á–∞–Ω–Ω—è –¥–ª—è —Ç–µ–±–µ –Ω–∞–π–±—ñ–ª—å—à –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∏–π?", reply_markup=kb.pace_kb)
    await state.set_state(Survey.pace)

@router.message(Survey.pace)
async def ask_hobbies(msg: Message, state: FSMContext):
    await state.update_data(pace=msg.text)
    await msg.answer("üé® –Ø–∫—ñ –≤ —Ç–µ–±–µ —Ö–æ–±—ñ —Ç–∞ —ñ–Ω—Ç–µ—Ä–µ—Å–∏?", reply_markup=ReplyKeyboardRemove())
    await state.set_state(Survey.hobbies)

@router.message(Survey.hobbies)
async def ask_usage(msg: Message, state: FSMContext):
    await state.update_data(hobbies=msg.text)
    await msg.answer("üó£ –Ø–∫ —á–∞—Å—Ç–æ —Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É –º–æ–≤—É –≤ –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–º—É –∂–∏—Ç—Ç—ñ?")
    await state.set_state(Survey.usage)

@router.message(Survey.usage)
async def ask_favorites(msg: Message, state: FSMContext):
    await state.update_data(usage=msg.text)
    await msg.answer("üé¨ –Ø–∫—ñ —Ç–≤–æ—ó —É–ª—é–±–ª–µ–Ω—ñ —Ñ—ñ–ª—å–º–∏, –∫–Ω–∏–≥–∏, –º—É–∑–∏–∫–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é?")
    await state.set_state(Survey.favorites)

@router.message(Survey.favorites)
async def ask_level(msg: Message, state: FSMContext):
    await state.update_data(favorites=msg.text)
    await msg.answer("üìä –ù–∞ —Ç–≤–æ—é –¥—É–º–∫—É, —è–∫–∏–π –≤ —Ç–µ–±–µ —Ä—ñ–≤–µ–Ω—å –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó?", reply_markup=kb.level_kb)
    await state.set_state(Survey.level)

# @router.message(Survey.level)
# async def handle_level(msg: Message, state: FSMContext):
#     await state.update_data(level=msg.text)
#     # 
#     if "B1" in msg.text:
#         await msg.answer("üìñ Read the following passage and answer the questions below:\n\n"
#                          "‚¨áÔ∏è"
#                          "In recent years, the popularity of remote work has grown significantly. "
#                          "With advances in technology and communication tools, more companies are offering employees the flexibility to work from home or other locations. "
#                          "This shift has been driven by several factors, including the desire for a better work-life balance, reduced commuting time, and the ability to attract talent from a broader geographic area.\n\n"
                        
#                          "Remote work offers numerous benefits for both employers and employees. "
#                          "Employees often report higher job satisfaction, increased productivity, and reduced stress levels. "
#                          "Employers can save on office space and related expenses, and they can also access a larger pool of candidates for open positions.\n\n"
                  
#                          "However, remote work also presents challenges."
#                          "Some employees may feel isolated or disconnected from their colleagues, which can impact collaboration and team cohesion. "
#                          "Additionally, managing remote teams requires different skills and strategies compared to traditional office settings."
                         
#                          )
        
#         await msg.answer(
#             "‚úÖ –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É 'I read the text' –∫–æ–ª–∏ –ø—Ä–æ—á–∏—Ç–∞—î—à.",
#               reply_markup=ReplyKeyboardMarkup(
#             keyboard=[[KeyboardButton(text="I read the text")]], 
#             resize_keyboard=True,
#             one_time_keyboard=True
#         ))
#         await state.set_state(Survey.read_confirm)
#     else:
#         # –Ø–∫—â–æ –Ω–µ B1 ‚Äì –ø—Ä–æ—Å—Ç–æ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
#         data = await state.get_data()
#         save_to_sheet(data)
#         await msg.answer("‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ!")
#         await state.clear()

@router.message(Survey.level)
async def handle_level(msg: Message, state: FSMContext):
    await state.update_data(level=msg.text)

    if "B1" in msg.text:
        # –ª–æ–≥—ñ–∫–∞ –¥–ª—è B1
        await msg.answer("üìñ Read the following passage and answer the questions below:\n\n"
                         "‚¨áÔ∏è"
                         "In recent years, the popularity of remote work has grown significantly. "
                         "With advances in technology and communication tools, more companies are offering employees the flexibility to work from home or other locations. "
                         "This shift has been driven by several factors, including the desire for a better work-life balance, reduced commuting time, and the ability to attract talent from a broader geographic area.\n\n"
                         "Remote work offers numerous benefits for both employers and employees. "
                         "Employees often report higher job satisfaction, increased productivity, and reduced stress levels. "
                         "Employers can save on office space and related expenses, and they can also access a larger pool of candidates for open positions.\n\n"
                         "However, remote work also presents challenges. "
                         "Some employees may feel isolated or disconnected from their colleagues, which can impact collaboration and team cohesion. "
                         "Additionally, managing remote teams requires different skills and strategies compared to traditional office settings."
                         )
        await msg.answer(
            "‚úÖ Click the 'I read the text' button when you're done.",
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton(text="I read the text")]],
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )
        await state.set_state(Survey.read_confirm)

    elif "B2" in msg.text:
        from bot import b2_flow
        await b2_flow.start_b2_flow(msg, state)

    else:
        # –Ü–Ω—à—ñ —Ä—ñ–≤–Ω—ñ ‚Äî –∑–∞–≥–ª—É—à–∫–∞ –∞–±–æ –ø—Ä–æ—Å—Ç–æ –∑–±–µ—Ä–µ–≥—Ç–∏
        data = await state.get_data()
        save_to_sheet(data)
        await msg.answer("‚úÖ –î—è–∫—É—î–º–æ –∑–∞ —Ç–≤–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ!")
        await state.clear()